{
    "swagger": "2.0",
    "info": {
        "description": "This is Tapera API listing descriptions.",
        "title": "Tapera API",
        "termsOfService": "http://Tapera.org/terms/",
        "contact": {
            "name": "Tapera API Support",
            "url": "http://www.Tapera.org/support",
            "email": "support@Tapera.org"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "v1.0.0"
    },
    "paths": {
        "/registration/activate/{id}": {
            "patch": {
                "produces": [
                    "text/plain"
                ],
                "summary": "Activate a registered user by id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User Id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httpx.Error"
                        }
                    }
                }
            }
        },
        "/registration/register": {
            "post": {
                "produces": [
                    "text/plain"
                ],
                "summary": "Register a ne user",
                "parameters": [
                    {
                        "description": "param",
                        "name": "param",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/userreg.RegisterParam"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httpx.Error"
                        }
                    }
                }
            }
        },
        "/user/all/{page}/{size}": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieves all users based on page and size",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Page",
                        "name": "page",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Size",
                        "name": "size",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/user.Result"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httpx.Error"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "httpx.Error": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "example": 400
                },
                "errId": {
                    "type": "string",
                    "example": "453993f6-e433-445a-b1e4-8dbd70ef26e9"
                },
                "msg": {
                    "type": "object"
                }
            }
        },
        "user.Result": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "createdBy": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "firstName": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "lastName": {
                    "type": "string"
                },
                "role": {
                    "type": "integer"
                },
                "status": {
                    "type": "integer"
                },
                "updateAt": {
                    "type": "string"
                },
                "updateBy": {
                    "type": "string"
                }
            }
        },
        "userreg.RegisterParam": {
            "type": "object",
            "required": [
                "email",
                "firstName",
                "lastName",
                "password",
                "role"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "firstName": {
                    "type": "string"
                },
                "lastName": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "role": {
                    "type": "integer"
                }
            }
        }
    }
}