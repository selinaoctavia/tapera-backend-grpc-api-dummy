// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0-devel
// 	protoc        v3.12.3
// source: mitraintegrasi.proto

package v1

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	_ "github.com/golang/protobuf/protoc-gen-go/descriptor"
	_ "github.com/golang/protobuf/ptypes/empty"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type Msg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Msg) Reset() {
	*x = Msg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mitraintegrasi_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Msg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Msg) ProtoMessage() {}

func (x *Msg) ProtoReflect() protoreflect.Message {
	mi := &file_mitraintegrasi_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Msg.ProtoReflect.Descriptor instead.
func (*Msg) Descriptor() ([]byte, []int) {
	return file_mitraintegrasi_proto_rawDescGZIP(), []int{0}
}

type HttpxError struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code  uint32 `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	ErrId string `protobuf:"bytes,2,opt,name=err_id,json=errId,proto3" json:"err_id,omitempty"`
	Msg   *Msg   `protobuf:"bytes,3,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *HttpxError) Reset() {
	*x = HttpxError{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mitraintegrasi_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HttpxError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HttpxError) ProtoMessage() {}

func (x *HttpxError) ProtoReflect() protoreflect.Message {
	mi := &file_mitraintegrasi_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HttpxError.ProtoReflect.Descriptor instead.
func (*HttpxError) Descriptor() ([]byte, []int) {
	return file_mitraintegrasi_proto_rawDescGZIP(), []int{1}
}

func (x *HttpxError) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *HttpxError) GetErrId() string {
	if x != nil {
		return x.ErrId
	}
	return ""
}

func (x *HttpxError) GetMsg() *Msg {
	if x != nil {
		return x.Msg
	}
	return nil
}

type UserResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CreatedAt *timestamp.Timestamp `protobuf:"bytes,1,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	CreatedBy string               `protobuf:"bytes,2,opt,name=created_by,json=createdBy,proto3" json:"created_by,omitempty"`
	Email     string               `protobuf:"bytes,3,opt,name=email,proto3" json:"email,omitempty"`
	FirstName string               `protobuf:"bytes,4,opt,name=first_name,json=firstName,proto3" json:"first_name,omitempty"`
	Id        string               `protobuf:"bytes,5,opt,name=id,proto3" json:"id,omitempty"`
	LastName  string               `protobuf:"bytes,6,opt,name=last_name,json=lastName,proto3" json:"last_name,omitempty"`
	Role      uint32               `protobuf:"varint,7,opt,name=role,proto3" json:"role,omitempty"`
	Status    uint32               `protobuf:"varint,8,opt,name=status,proto3" json:"status,omitempty"`
	UpdatedAt *timestamp.Timestamp `protobuf:"bytes,9,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	UpdatedBy string               `protobuf:"bytes,10,opt,name=updated_by,json=updatedBy,proto3" json:"updated_by,omitempty"`
}

func (x *UserResult) Reset() {
	*x = UserResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mitraintegrasi_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserResult) ProtoMessage() {}

func (x *UserResult) ProtoReflect() protoreflect.Message {
	mi := &file_mitraintegrasi_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserResult.ProtoReflect.Descriptor instead.
func (*UserResult) Descriptor() ([]byte, []int) {
	return file_mitraintegrasi_proto_rawDescGZIP(), []int{2}
}

func (x *UserResult) GetCreatedAt() *timestamp.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *UserResult) GetCreatedBy() string {
	if x != nil {
		return x.CreatedBy
	}
	return ""
}

func (x *UserResult) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *UserResult) GetFirstName() string {
	if x != nil {
		return x.FirstName
	}
	return ""
}

func (x *UserResult) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UserResult) GetLastName() string {
	if x != nil {
		return x.LastName
	}
	return ""
}

func (x *UserResult) GetRole() uint32 {
	if x != nil {
		return x.Role
	}
	return 0
}

func (x *UserResult) GetStatus() uint32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *UserResult) GetUpdatedAt() *timestamp.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *UserResult) GetUpdatedBy() string {
	if x != nil {
		return x.UpdatedBy
	}
	return ""
}

type SingleUserResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result *UserResult `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *SingleUserResult) Reset() {
	*x = SingleUserResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mitraintegrasi_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SingleUserResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SingleUserResult) ProtoMessage() {}

func (x *SingleUserResult) ProtoReflect() protoreflect.Message {
	mi := &file_mitraintegrasi_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SingleUserResult.ProtoReflect.Descriptor instead.
func (*SingleUserResult) Descriptor() ([]byte, []int) {
	return file_mitraintegrasi_proto_rawDescGZIP(), []int{3}
}

func (x *SingleUserResult) GetResult() *UserResult {
	if x != nil {
		return x.Result
	}
	return nil
}

type ListUserResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result []*UserResult `protobuf:"bytes,1,rep,name=result,proto3" json:"result,omitempty"`
}

func (x *ListUserResult) Reset() {
	*x = ListUserResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mitraintegrasi_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListUserResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListUserResult) ProtoMessage() {}

func (x *ListUserResult) ProtoReflect() protoreflect.Message {
	mi := &file_mitraintegrasi_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListUserResult.ProtoReflect.Descriptor instead.
func (*ListUserResult) Descriptor() ([]byte, []int) {
	return file_mitraintegrasi_proto_rawDescGZIP(), []int{4}
}

func (x *ListUserResult) GetResult() []*UserResult {
	if x != nil {
		return x.Result
	}
	return nil
}

type UserIDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *UserIDRequest) Reset() {
	*x = UserIDRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mitraintegrasi_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserIDRequest) ProtoMessage() {}

func (x *UserIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mitraintegrasi_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserIDRequest.ProtoReflect.Descriptor instead.
func (*UserIDRequest) Descriptor() ([]byte, []int) {
	return file_mitraintegrasi_proto_rawDescGZIP(), []int{5}
}

func (x *UserIDRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type PageSizeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page uint32 `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	Size uint32 `protobuf:"varint,2,opt,name=size,proto3" json:"size,omitempty"`
}

func (x *PageSizeRequest) Reset() {
	*x = PageSizeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mitraintegrasi_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PageSizeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PageSizeRequest) ProtoMessage() {}

func (x *PageSizeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mitraintegrasi_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PageSizeRequest.ProtoReflect.Descriptor instead.
func (*PageSizeRequest) Descriptor() ([]byte, []int) {
	return file_mitraintegrasi_proto_rawDescGZIP(), []int{6}
}

func (x *PageSizeRequest) GetPage() uint32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *PageSizeRequest) GetSize() uint32 {
	if x != nil {
		return x.Size
	}
	return 0
}

type PendaftaranPesertaRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []*PendaftaranPesertaData `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *PendaftaranPesertaRequest) Reset() {
	*x = PendaftaranPesertaRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mitraintegrasi_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PendaftaranPesertaRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PendaftaranPesertaRequest) ProtoMessage() {}

func (x *PendaftaranPesertaRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mitraintegrasi_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PendaftaranPesertaRequest.ProtoReflect.Descriptor instead.
func (*PendaftaranPesertaRequest) Descriptor() ([]byte, []int) {
	return file_mitraintegrasi_proto_rawDescGZIP(), []int{7}
}

func (x *PendaftaranPesertaRequest) GetData() []*PendaftaranPesertaData {
	if x != nil {
		return x.Data
	}
	return nil
}

type PendaftaranPesertaData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProcessingDate       string `protobuf:"bytes,1,opt,name=processing_date,json=processingDate,proto3" json:"processing_date,omitempty"`
	ProcessingTime       string `protobuf:"bytes,2,opt,name=processing_time,json=processingTime,proto3" json:"processing_time,omitempty"`
	SaCode               string `protobuf:"bytes,3,opt,name=sa_code,json=saCode,proto3" json:"sa_code,omitempty"`
	Sid                  string `protobuf:"bytes,4,opt,name=sid,proto3" json:"sid,omitempty"`
	SidGenerationStatus  string `protobuf:"bytes,5,opt,name=sid_generation_status,json=sidGenerationStatus,proto3" json:"sid_generation_status,omitempty"`
	NewSid               string `protobuf:"bytes,6,opt,name=new_sid,json=newSid,proto3" json:"new_sid,omitempty"`
	FirstName            string `protobuf:"bytes,7,opt,name=first_name,json=firstName,proto3" json:"first_name,omitempty"`
	MiddleName           string `protobuf:"bytes,8,opt,name=middle_name,json=middleName,proto3" json:"middle_name,omitempty"`
	LastName             string `protobuf:"bytes,9,opt,name=last_name,json=lastName,proto3" json:"last_name,omitempty"`
	Nationality          string `protobuf:"bytes,10,opt,name=nationality,proto3" json:"nationality,omitempty"`
	Identification       string `protobuf:"bytes,11,opt,name=identification,proto3" json:"identification,omitempty"`
	IdNo                 string `protobuf:"bytes,12,opt,name=id_no,json=idNo,proto3" json:"id_no,omitempty"`
	IdExpDate            string `protobuf:"bytes,13,opt,name=id_exp_date,json=idExpDate,proto3" json:"id_exp_date,omitempty"`
	NpwpNo               string `protobuf:"bytes,14,opt,name=npwp_no,json=npwpNo,proto3" json:"npwp_no,omitempty"`
	NpwpDate             string `protobuf:"bytes,15,opt,name=npwp_date,json=npwpDate,proto3" json:"npwp_date,omitempty"`
	BirthCountry         string `protobuf:"bytes,16,opt,name=birth_country,json=birthCountry,proto3" json:"birth_country,omitempty"`
	BirthPlace           string `protobuf:"bytes,17,opt,name=birth_place,json=birthPlace,proto3" json:"birth_place,omitempty"`
	BirthDate            string `protobuf:"bytes,18,opt,name=birth_date,json=birthDate,proto3" json:"birth_date,omitempty"`
	Gender               string `protobuf:"bytes,19,opt,name=gender,proto3" json:"gender,omitempty"`
	EducationBackground  string `protobuf:"bytes,20,opt,name=education_background,json=educationBackground,proto3" json:"education_background,omitempty"`
	MotherName           string `protobuf:"bytes,21,opt,name=mother_name,json=motherName,proto3" json:"mother_name,omitempty"`
	Religion             string `protobuf:"bytes,22,opt,name=religion,proto3" json:"religion,omitempty"`
	Occupation           string `protobuf:"bytes,23,opt,name=occupation,proto3" json:"occupation,omitempty"`
	IncomeLevel          string `protobuf:"bytes,24,opt,name=income_level,json=incomeLevel,proto3" json:"income_level,omitempty"`
	MaritalStatus        string `protobuf:"bytes,25,opt,name=marital_status,json=maritalStatus,proto3" json:"marital_status,omitempty"`
	SpouseName           string `protobuf:"bytes,26,opt,name=spouse_name,json=spouseName,proto3" json:"spouse_name,omitempty"`
	RiskProfile          string `protobuf:"bytes,27,opt,name=risk_profile,json=riskProfile,proto3" json:"risk_profile,omitempty"`
	InvestmentObjective  string `protobuf:"bytes,28,opt,name=investment_objective,json=investmentObjective,proto3" json:"investment_objective,omitempty"`
	SourceOfFund         string `protobuf:"bytes,29,opt,name=source_of_fund,json=sourceOfFund,proto3" json:"source_of_fund,omitempty"`
	AssetOwner           string `protobuf:"bytes,30,opt,name=asset_owner,json=assetOwner,proto3" json:"asset_owner,omitempty"`
	KtpAddress           string `protobuf:"bytes,31,opt,name=ktp_address,json=ktpAddress,proto3" json:"ktp_address,omitempty"`
	KtpCityCode          string `protobuf:"bytes,32,opt,name=ktp_city_code,json=ktpCityCode,proto3" json:"ktp_city_code,omitempty"`
	KtpPostal            string `protobuf:"bytes,33,opt,name=ktp_postal,json=ktpPostal,proto3" json:"ktp_postal,omitempty"`
	CorrAddress          string `protobuf:"bytes,34,opt,name=corr_address,json=corrAddress,proto3" json:"corr_address,omitempty"`
	CorrCityCode         string `protobuf:"bytes,35,opt,name=corr_city_code,json=corrCityCode,proto3" json:"corr_city_code,omitempty"`
	CorrCityName         string `protobuf:"bytes,36,opt,name=corr_city_name,json=corrCityName,proto3" json:"corr_city_name,omitempty"`
	CorrPostal           string `protobuf:"bytes,37,opt,name=corr_postal,json=corrPostal,proto3" json:"corr_postal,omitempty"`
	CorrCountry          string `protobuf:"bytes,38,opt,name=corr_country,json=corrCountry,proto3" json:"corr_country,omitempty"`
	DomAddress           string `protobuf:"bytes,39,opt,name=dom_address,json=domAddress,proto3" json:"dom_address,omitempty"`
	DomCityCode          string `protobuf:"bytes,40,opt,name=dom_city_code,json=domCityCode,proto3" json:"dom_city_code,omitempty"`
	DomCityName          string `protobuf:"bytes,41,opt,name=dom_city_name,json=domCityName,proto3" json:"dom_city_name,omitempty"`
	DomPostal            string `protobuf:"bytes,42,opt,name=dom_postal,json=domPostal,proto3" json:"dom_postal,omitempty"`
	DomCountry           string `protobuf:"bytes,43,opt,name=dom_country,json=domCountry,proto3" json:"dom_country,omitempty"`
	HomePhone            string `protobuf:"bytes,44,opt,name=home_phone,json=homePhone,proto3" json:"home_phone,omitempty"`
	MobilePhone          string `protobuf:"bytes,45,opt,name=mobile_phone,json=mobilePhone,proto3" json:"mobile_phone,omitempty"`
	Facsimile            string `protobuf:"bytes,46,opt,name=facsimile,proto3" json:"facsimile,omitempty"`
	Email                string `protobuf:"bytes,47,opt,name=email,proto3" json:"email,omitempty"`
	StatementType        string `protobuf:"bytes,48,opt,name=statement_type,json=statementType,proto3" json:"statement_type,omitempty"`
	Fatca                string `protobuf:"bytes,49,opt,name=fatca,proto3" json:"fatca,omitempty"`
	Tin                  string `protobuf:"bytes,50,opt,name=tin,proto3" json:"tin,omitempty"`
	TinCountry           string `protobuf:"bytes,51,opt,name=tin_country,json=tinCountry,proto3" json:"tin_country,omitempty"`
	ExternalCifNo        string `protobuf:"bytes,52,opt,name=external_cif_no,json=externalCifNo,proto3" json:"external_cif_no,omitempty"`
	Type                 string `protobuf:"bytes,53,opt,name=type,proto3" json:"type,omitempty"`
	InvestorType         string `protobuf:"bytes,54,opt,name=investor_type,json=investorType,proto3" json:"investor_type,omitempty"`
	RedPayBankBic_1      string `protobuf:"bytes,55,opt,name=red_pay_bank_bic_1,json=redPayBankBic1,proto3" json:"red_pay_bank_bic_1,omitempty"`
	RedPayBankBi_1       string `protobuf:"bytes,56,opt,name=red_pay_bank_bi_1,json=redPayBankBi1,proto3" json:"red_pay_bank_bi_1,omitempty"`
	RedPayBankName_1     string `protobuf:"bytes,57,opt,name=red_pay_bank_name_1,json=redPayBankName1,proto3" json:"red_pay_bank_name_1,omitempty"`
	RedPayBankCountry_1  string `protobuf:"bytes,58,opt,name=red_pay_bank_country_1,json=redPayBankCountry1,proto3" json:"red_pay_bank_country_1,omitempty"`
	RedPayBankBranch_1   string `protobuf:"bytes,59,opt,name=red_pay_bank_branch_1,json=redPayBankBranch1,proto3" json:"red_pay_bank_branch_1,omitempty"`
	RedPayBankAccCcy_1   string `protobuf:"bytes,60,opt,name=red_pay_bank_acc_ccy_1,json=redPayBankAccCcy1,proto3" json:"red_pay_bank_acc_ccy_1,omitempty"`
	REDM_Payment_ACNo_1  string `protobuf:"bytes,61,opt,name=REDM_Payment_ACNo_1,json=REDMPaymentACNo1,proto3" json:"REDM_Payment_ACNo_1,omitempty"`
	RedPayBankAccName_1  string `protobuf:"bytes,62,opt,name=red_pay_bank_acc_name_1,json=redPayBankAccName1,proto3" json:"red_pay_bank_acc_name_1,omitempty"`
	RedPayBankBic_2      string `protobuf:"bytes,63,opt,name=red_pay_bank_bic_2,json=redPayBankBic2,proto3" json:"red_pay_bank_bic_2,omitempty"`
	RedPayBankBi_2       string `protobuf:"bytes,64,opt,name=red_pay_bank_bi_2,json=redPayBankBi2,proto3" json:"red_pay_bank_bi_2,omitempty"`
	RedPayBankName_2     string `protobuf:"bytes,65,opt,name=red_pay_bank_name_2,json=redPayBankName2,proto3" json:"red_pay_bank_name_2,omitempty"`
	RedPayBankCountry_2  string `protobuf:"bytes,66,opt,name=red_pay_bank_country_2,json=redPayBankCountry2,proto3" json:"red_pay_bank_country_2,omitempty"`
	RedPayBankBranch_2   string `protobuf:"bytes,67,opt,name=red_pay_bank_branch_2,json=redPayBankBranch2,proto3" json:"red_pay_bank_branch_2,omitempty"`
	RedPayBankAccCcy_2   string `protobuf:"bytes,68,opt,name=red_pay_bank_acc_ccy_2,json=redPayBankAccCcy2,proto3" json:"red_pay_bank_acc_ccy_2,omitempty"`
	RedPayBankAccNo_2    string `protobuf:"bytes,69,opt,name=red_pay_bank_acc_no_2,json=redPayBankAccNo2,proto3" json:"red_pay_bank_acc_no_2,omitempty"`
	RedPayBankAccName_2  string `protobuf:"bytes,70,opt,name=red_pay_bank_acc_name_2,json=redPayBankAccName2,proto3" json:"red_pay_bank_acc_name_2,omitempty"`
	RedPayBankBic_3      string `protobuf:"bytes,71,opt,name=red_pay_bank_bic_3,json=redPayBankBic3,proto3" json:"red_pay_bank_bic_3,omitempty"`
	RedPayBankBi_3       string `protobuf:"bytes,72,opt,name=red_pay_bank_bi_3,json=redPayBankBi3,proto3" json:"red_pay_bank_bi_3,omitempty"`
	RedPayBankName_3     string `protobuf:"bytes,73,opt,name=red_pay_bank_name_3,json=redPayBankName3,proto3" json:"red_pay_bank_name_3,omitempty"`
	RedPayBankCountry_3  string `protobuf:"bytes,74,opt,name=red_pay_bank_country_3,json=redPayBankCountry3,proto3" json:"red_pay_bank_country_3,omitempty"`
	RedPayBankBranch_3   string `protobuf:"bytes,75,opt,name=red_pay_bank_branch_3,json=redPayBankBranch3,proto3" json:"red_pay_bank_branch_3,omitempty"`
	RedPayBankAccCcy_3   string `protobuf:"bytes,76,opt,name=red_pay_bank_acc_ccy_3,json=redPayBankAccCcy3,proto3" json:"red_pay_bank_acc_ccy_3,omitempty"`
	RedPayBankAccNo_3    string `protobuf:"bytes,77,opt,name=red_pay_bank_acc_no_3,json=redPayBankAccNo3,proto3" json:"red_pay_bank_acc_no_3,omitempty"`
	RedPayBankAccName_3  string `protobuf:"bytes,78,opt,name=red_pay_bank_acc_name_3,json=redPayBankAccName3,proto3" json:"red_pay_bank_acc_name_3,omitempty"`
	ClientCode           string `protobuf:"bytes,79,opt,name=client_code,json=clientCode,proto3" json:"client_code,omitempty"`
	InvestorFundUnitAcNo string `protobuf:"bytes,80,opt,name=investor_fund_unit_ac_no,json=investorFundUnitAcNo,proto3" json:"investor_fund_unit_ac_no,omitempty"`
	InvestorNumber       string `protobuf:"bytes,81,opt,name=investor_number,json=investorNumber,proto3" json:"investor_number,omitempty"`
}

func (x *PendaftaranPesertaData) Reset() {
	*x = PendaftaranPesertaData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mitraintegrasi_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PendaftaranPesertaData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PendaftaranPesertaData) ProtoMessage() {}

func (x *PendaftaranPesertaData) ProtoReflect() protoreflect.Message {
	mi := &file_mitraintegrasi_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PendaftaranPesertaData.ProtoReflect.Descriptor instead.
func (*PendaftaranPesertaData) Descriptor() ([]byte, []int) {
	return file_mitraintegrasi_proto_rawDescGZIP(), []int{8}
}

func (x *PendaftaranPesertaData) GetProcessingDate() string {
	if x != nil {
		return x.ProcessingDate
	}
	return ""
}

func (x *PendaftaranPesertaData) GetProcessingTime() string {
	if x != nil {
		return x.ProcessingTime
	}
	return ""
}

func (x *PendaftaranPesertaData) GetSaCode() string {
	if x != nil {
		return x.SaCode
	}
	return ""
}

func (x *PendaftaranPesertaData) GetSid() string {
	if x != nil {
		return x.Sid
	}
	return ""
}

func (x *PendaftaranPesertaData) GetSidGenerationStatus() string {
	if x != nil {
		return x.SidGenerationStatus
	}
	return ""
}

func (x *PendaftaranPesertaData) GetNewSid() string {
	if x != nil {
		return x.NewSid
	}
	return ""
}

func (x *PendaftaranPesertaData) GetFirstName() string {
	if x != nil {
		return x.FirstName
	}
	return ""
}

func (x *PendaftaranPesertaData) GetMiddleName() string {
	if x != nil {
		return x.MiddleName
	}
	return ""
}

func (x *PendaftaranPesertaData) GetLastName() string {
	if x != nil {
		return x.LastName
	}
	return ""
}

func (x *PendaftaranPesertaData) GetNationality() string {
	if x != nil {
		return x.Nationality
	}
	return ""
}

func (x *PendaftaranPesertaData) GetIdentification() string {
	if x != nil {
		return x.Identification
	}
	return ""
}

func (x *PendaftaranPesertaData) GetIdNo() string {
	if x != nil {
		return x.IdNo
	}
	return ""
}

func (x *PendaftaranPesertaData) GetIdExpDate() string {
	if x != nil {
		return x.IdExpDate
	}
	return ""
}

func (x *PendaftaranPesertaData) GetNpwpNo() string {
	if x != nil {
		return x.NpwpNo
	}
	return ""
}

func (x *PendaftaranPesertaData) GetNpwpDate() string {
	if x != nil {
		return x.NpwpDate
	}
	return ""
}

func (x *PendaftaranPesertaData) GetBirthCountry() string {
	if x != nil {
		return x.BirthCountry
	}
	return ""
}

func (x *PendaftaranPesertaData) GetBirthPlace() string {
	if x != nil {
		return x.BirthPlace
	}
	return ""
}

func (x *PendaftaranPesertaData) GetBirthDate() string {
	if x != nil {
		return x.BirthDate
	}
	return ""
}

func (x *PendaftaranPesertaData) GetGender() string {
	if x != nil {
		return x.Gender
	}
	return ""
}

func (x *PendaftaranPesertaData) GetEducationBackground() string {
	if x != nil {
		return x.EducationBackground
	}
	return ""
}

func (x *PendaftaranPesertaData) GetMotherName() string {
	if x != nil {
		return x.MotherName
	}
	return ""
}

func (x *PendaftaranPesertaData) GetReligion() string {
	if x != nil {
		return x.Religion
	}
	return ""
}

func (x *PendaftaranPesertaData) GetOccupation() string {
	if x != nil {
		return x.Occupation
	}
	return ""
}

func (x *PendaftaranPesertaData) GetIncomeLevel() string {
	if x != nil {
		return x.IncomeLevel
	}
	return ""
}

func (x *PendaftaranPesertaData) GetMaritalStatus() string {
	if x != nil {
		return x.MaritalStatus
	}
	return ""
}

func (x *PendaftaranPesertaData) GetSpouseName() string {
	if x != nil {
		return x.SpouseName
	}
	return ""
}

func (x *PendaftaranPesertaData) GetRiskProfile() string {
	if x != nil {
		return x.RiskProfile
	}
	return ""
}

func (x *PendaftaranPesertaData) GetInvestmentObjective() string {
	if x != nil {
		return x.InvestmentObjective
	}
	return ""
}

func (x *PendaftaranPesertaData) GetSourceOfFund() string {
	if x != nil {
		return x.SourceOfFund
	}
	return ""
}

func (x *PendaftaranPesertaData) GetAssetOwner() string {
	if x != nil {
		return x.AssetOwner
	}
	return ""
}

func (x *PendaftaranPesertaData) GetKtpAddress() string {
	if x != nil {
		return x.KtpAddress
	}
	return ""
}

func (x *PendaftaranPesertaData) GetKtpCityCode() string {
	if x != nil {
		return x.KtpCityCode
	}
	return ""
}

func (x *PendaftaranPesertaData) GetKtpPostal() string {
	if x != nil {
		return x.KtpPostal
	}
	return ""
}

func (x *PendaftaranPesertaData) GetCorrAddress() string {
	if x != nil {
		return x.CorrAddress
	}
	return ""
}

func (x *PendaftaranPesertaData) GetCorrCityCode() string {
	if x != nil {
		return x.CorrCityCode
	}
	return ""
}

func (x *PendaftaranPesertaData) GetCorrCityName() string {
	if x != nil {
		return x.CorrCityName
	}
	return ""
}

func (x *PendaftaranPesertaData) GetCorrPostal() string {
	if x != nil {
		return x.CorrPostal
	}
	return ""
}

func (x *PendaftaranPesertaData) GetCorrCountry() string {
	if x != nil {
		return x.CorrCountry
	}
	return ""
}

func (x *PendaftaranPesertaData) GetDomAddress() string {
	if x != nil {
		return x.DomAddress
	}
	return ""
}

func (x *PendaftaranPesertaData) GetDomCityCode() string {
	if x != nil {
		return x.DomCityCode
	}
	return ""
}

func (x *PendaftaranPesertaData) GetDomCityName() string {
	if x != nil {
		return x.DomCityName
	}
	return ""
}

func (x *PendaftaranPesertaData) GetDomPostal() string {
	if x != nil {
		return x.DomPostal
	}
	return ""
}

func (x *PendaftaranPesertaData) GetDomCountry() string {
	if x != nil {
		return x.DomCountry
	}
	return ""
}

func (x *PendaftaranPesertaData) GetHomePhone() string {
	if x != nil {
		return x.HomePhone
	}
	return ""
}

func (x *PendaftaranPesertaData) GetMobilePhone() string {
	if x != nil {
		return x.MobilePhone
	}
	return ""
}

func (x *PendaftaranPesertaData) GetFacsimile() string {
	if x != nil {
		return x.Facsimile
	}
	return ""
}

func (x *PendaftaranPesertaData) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *PendaftaranPesertaData) GetStatementType() string {
	if x != nil {
		return x.StatementType
	}
	return ""
}

func (x *PendaftaranPesertaData) GetFatca() string {
	if x != nil {
		return x.Fatca
	}
	return ""
}

func (x *PendaftaranPesertaData) GetTin() string {
	if x != nil {
		return x.Tin
	}
	return ""
}

func (x *PendaftaranPesertaData) GetTinCountry() string {
	if x != nil {
		return x.TinCountry
	}
	return ""
}

func (x *PendaftaranPesertaData) GetExternalCifNo() string {
	if x != nil {
		return x.ExternalCifNo
	}
	return ""
}

func (x *PendaftaranPesertaData) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *PendaftaranPesertaData) GetInvestorType() string {
	if x != nil {
		return x.InvestorType
	}
	return ""
}

func (x *PendaftaranPesertaData) GetRedPayBankBic_1() string {
	if x != nil {
		return x.RedPayBankBic_1
	}
	return ""
}

func (x *PendaftaranPesertaData) GetRedPayBankBi_1() string {
	if x != nil {
		return x.RedPayBankBi_1
	}
	return ""
}

func (x *PendaftaranPesertaData) GetRedPayBankName_1() string {
	if x != nil {
		return x.RedPayBankName_1
	}
	return ""
}

func (x *PendaftaranPesertaData) GetRedPayBankCountry_1() string {
	if x != nil {
		return x.RedPayBankCountry_1
	}
	return ""
}

func (x *PendaftaranPesertaData) GetRedPayBankBranch_1() string {
	if x != nil {
		return x.RedPayBankBranch_1
	}
	return ""
}

func (x *PendaftaranPesertaData) GetRedPayBankAccCcy_1() string {
	if x != nil {
		return x.RedPayBankAccCcy_1
	}
	return ""
}

func (x *PendaftaranPesertaData) GetREDM_Payment_ACNo_1() string {
	if x != nil {
		return x.REDM_Payment_ACNo_1
	}
	return ""
}

func (x *PendaftaranPesertaData) GetRedPayBankAccName_1() string {
	if x != nil {
		return x.RedPayBankAccName_1
	}
	return ""
}

func (x *PendaftaranPesertaData) GetRedPayBankBic_2() string {
	if x != nil {
		return x.RedPayBankBic_2
	}
	return ""
}

func (x *PendaftaranPesertaData) GetRedPayBankBi_2() string {
	if x != nil {
		return x.RedPayBankBi_2
	}
	return ""
}

func (x *PendaftaranPesertaData) GetRedPayBankName_2() string {
	if x != nil {
		return x.RedPayBankName_2
	}
	return ""
}

func (x *PendaftaranPesertaData) GetRedPayBankCountry_2() string {
	if x != nil {
		return x.RedPayBankCountry_2
	}
	return ""
}

func (x *PendaftaranPesertaData) GetRedPayBankBranch_2() string {
	if x != nil {
		return x.RedPayBankBranch_2
	}
	return ""
}

func (x *PendaftaranPesertaData) GetRedPayBankAccCcy_2() string {
	if x != nil {
		return x.RedPayBankAccCcy_2
	}
	return ""
}

func (x *PendaftaranPesertaData) GetRedPayBankAccNo_2() string {
	if x != nil {
		return x.RedPayBankAccNo_2
	}
	return ""
}

func (x *PendaftaranPesertaData) GetRedPayBankAccName_2() string {
	if x != nil {
		return x.RedPayBankAccName_2
	}
	return ""
}

func (x *PendaftaranPesertaData) GetRedPayBankBic_3() string {
	if x != nil {
		return x.RedPayBankBic_3
	}
	return ""
}

func (x *PendaftaranPesertaData) GetRedPayBankBi_3() string {
	if x != nil {
		return x.RedPayBankBi_3
	}
	return ""
}

func (x *PendaftaranPesertaData) GetRedPayBankName_3() string {
	if x != nil {
		return x.RedPayBankName_3
	}
	return ""
}

func (x *PendaftaranPesertaData) GetRedPayBankCountry_3() string {
	if x != nil {
		return x.RedPayBankCountry_3
	}
	return ""
}

func (x *PendaftaranPesertaData) GetRedPayBankBranch_3() string {
	if x != nil {
		return x.RedPayBankBranch_3
	}
	return ""
}

func (x *PendaftaranPesertaData) GetRedPayBankAccCcy_3() string {
	if x != nil {
		return x.RedPayBankAccCcy_3
	}
	return ""
}

func (x *PendaftaranPesertaData) GetRedPayBankAccNo_3() string {
	if x != nil {
		return x.RedPayBankAccNo_3
	}
	return ""
}

func (x *PendaftaranPesertaData) GetRedPayBankAccName_3() string {
	if x != nil {
		return x.RedPayBankAccName_3
	}
	return ""
}

func (x *PendaftaranPesertaData) GetClientCode() string {
	if x != nil {
		return x.ClientCode
	}
	return ""
}

func (x *PendaftaranPesertaData) GetInvestorFundUnitAcNo() string {
	if x != nil {
		return x.InvestorFundUnitAcNo
	}
	return ""
}

func (x *PendaftaranPesertaData) GetInvestorNumber() string {
	if x != nil {
		return x.InvestorNumber
	}
	return ""
}

type PendaftaranPesertaResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status             string `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	MessageCode        string `protobuf:"bytes,2,opt,name=message_code,json=messageCode,proto3" json:"message_code,omitempty"`
	MessageDescription string `protobuf:"bytes,3,opt,name=message_description,json=messageDescription,proto3" json:"message_description,omitempty"`
	Data               *Data  `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *PendaftaranPesertaResponse) Reset() {
	*x = PendaftaranPesertaResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mitraintegrasi_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PendaftaranPesertaResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PendaftaranPesertaResponse) ProtoMessage() {}

func (x *PendaftaranPesertaResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mitraintegrasi_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PendaftaranPesertaResponse.ProtoReflect.Descriptor instead.
func (*PendaftaranPesertaResponse) Descriptor() ([]byte, []int) {
	return file_mitraintegrasi_proto_rawDescGZIP(), []int{9}
}

func (x *PendaftaranPesertaResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *PendaftaranPesertaResponse) GetMessageCode() string {
	if x != nil {
		return x.MessageCode
	}
	return ""
}

func (x *PendaftaranPesertaResponse) GetMessageDescription() string {
	if x != nil {
		return x.MessageDescription
	}
	return ""
}

func (x *PendaftaranPesertaResponse) GetData() *Data {
	if x != nil {
		return x.Data
	}
	return nil
}

type Data struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sid string `protobuf:"bytes,1,opt,name=sid,proto3" json:"sid,omitempty"`
}

func (x *Data) Reset() {
	*x = Data{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mitraintegrasi_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Data) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Data) ProtoMessage() {}

func (x *Data) ProtoReflect() protoreflect.Message {
	mi := &file_mitraintegrasi_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Data.ProtoReflect.Descriptor instead.
func (*Data) Descriptor() ([]byte, []int) {
	return file_mitraintegrasi_proto_rawDescGZIP(), []int{10}
}

func (x *Data) GetSid() string {
	if x != nil {
		return x.Sid
	}
	return ""
}

var File_mitraintegrasi_proto protoreflect.FileDescriptor

var file_mitraintegrasi_proto_rawDesc = []byte{
	0x0a, 0x14, 0x6d, 0x69, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x73, 0x69,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0e, 0x6d, 0x69, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x74,
	0x65, 0x67, 0x72, 0x61, 0x73, 0x69, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x20, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0x05, 0x0a, 0x03, 0x4d, 0x73, 0x67, 0x22, 0x5e, 0x0a, 0x0a, 0x48,
	0x74, 0x74, 0x70, 0x78, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x15, 0x0a,
	0x06, 0x65, 0x72, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65,
	0x72, 0x72, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x13, 0x2e, 0x6d, 0x69, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61,
	0x73, 0x69, 0x2e, 0x4d, 0x73, 0x67, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x22, 0xce, 0x02, 0x0a, 0x0a,
	0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x5f, 0x62, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x42, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x1d, 0x0a, 0x0a, 0x66, 0x69,
	0x72, 0x73, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x66, 0x69, 0x72, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x6c, 0x61, 0x73,
	0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x61,
	0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x39, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a,
	0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x62, 0x79, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x22, 0x46, 0x0a, 0x10,
	0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x12, 0x32, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x6d, 0x69, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x73,
	0x69, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x72, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x22, 0x44, 0x0a, 0x0e, 0x4c, 0x69, 0x73, 0x74, 0x55, 0x73, 0x65, 0x72,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x32, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6d, 0x69, 0x74, 0x72, 0x61, 0x69, 0x6e,
	0x74, 0x65, 0x67, 0x72, 0x61, 0x73, 0x69, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x1f, 0x0a, 0x0d, 0x55, 0x73,
	0x65, 0x72, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x39, 0x0a, 0x0f, 0x50,
	0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12,
	0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x70, 0x61,
	0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x22, 0x57, 0x0a, 0x19, 0x50, 0x65, 0x6e, 0x64, 0x61, 0x66,
	0x74, 0x61, 0x72, 0x61, 0x6e, 0x50, 0x65, 0x73, 0x65, 0x72, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x3a, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x26, 0x2e, 0x6d, 0x69, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61,
	0x73, 0x69, 0x2e, 0x50, 0x65, 0x6e, 0x64, 0x61, 0x66, 0x74, 0x61, 0x72, 0x61, 0x6e, 0x50, 0x65,
	0x73, 0x65, 0x72, 0x74, 0x61, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22,
	0x99, 0x18, 0x0a, 0x16, 0x50, 0x65, 0x6e, 0x64, 0x61, 0x66, 0x74, 0x61, 0x72, 0x61, 0x6e, 0x50,
	0x65, 0x73, 0x65, 0x72, 0x74, 0x61, 0x44, 0x61, 0x74, 0x61, 0x12, 0x27, 0x0a, 0x0f, 0x70, 0x72,
	0x6f, 0x63, 0x65, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0e, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x44,
	0x61, 0x74, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x69, 0x6e,
	0x67, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x70, 0x72,
	0x6f, 0x63, 0x65, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x17, 0x0a, 0x07,
	0x73, 0x61, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73,
	0x61, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x73, 0x69, 0x64, 0x12, 0x32, 0x0a, 0x15, 0x73, 0x69, 0x64, 0x5f, 0x67,
	0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x73, 0x69, 0x64, 0x47, 0x65, 0x6e, 0x65, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x17, 0x0a, 0x07, 0x6e,
	0x65, 0x77, 0x5f, 0x73, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6e, 0x65,
	0x77, 0x53, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x66, 0x69, 0x72, 0x73, 0x74, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x66, 0x69, 0x72, 0x73, 0x74, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x61, 0x73, 0x74, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x20, 0x0a, 0x0b, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x69, 0x74, 0x79,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c,
	0x69, 0x74, 0x79, 0x12, 0x26, 0x0a, 0x0e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x69, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x13, 0x0a, 0x05, 0x69,
	0x64, 0x5f, 0x6e, 0x6f, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x64, 0x4e, 0x6f,
	0x12, 0x1e, 0x0a, 0x0b, 0x69, 0x64, 0x5f, 0x65, 0x78, 0x70, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18,
	0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x69, 0x64, 0x45, 0x78, 0x70, 0x44, 0x61, 0x74, 0x65,
	0x12, 0x17, 0x0a, 0x07, 0x6e, 0x70, 0x77, 0x70, 0x5f, 0x6e, 0x6f, 0x18, 0x0e, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x6e, 0x70, 0x77, 0x70, 0x4e, 0x6f, 0x12, 0x1b, 0x0a, 0x09, 0x6e, 0x70, 0x77,
	0x70, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x70,
	0x77, 0x70, 0x44, 0x61, 0x74, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x62, 0x69, 0x72, 0x74, 0x68, 0x5f,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x62,
	0x69, 0x72, 0x74, 0x68, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x1f, 0x0a, 0x0b, 0x62,
	0x69, 0x72, 0x74, 0x68, 0x5f, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x62, 0x69, 0x72, 0x74, 0x68, 0x50, 0x6c, 0x61, 0x63, 0x65, 0x12, 0x1d, 0x0a, 0x0a,
	0x62, 0x69, 0x72, 0x74, 0x68, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x62, 0x69, 0x72, 0x74, 0x68, 0x44, 0x61, 0x74, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x67,
	0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x67, 0x65, 0x6e,
	0x64, 0x65, 0x72, 0x12, 0x31, 0x0a, 0x14, 0x65, 0x64, 0x75, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x62, 0x61, 0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x18, 0x14, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x13, 0x65, 0x64, 0x75, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x61, 0x63, 0x6b,
	0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x6f, 0x74, 0x68, 0x65, 0x72,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6d, 0x6f, 0x74,
	0x68, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x6c, 0x69, 0x67,
	0x69, 0x6f, 0x6e, 0x18, 0x16, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x6c, 0x69, 0x67,
	0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x6f, 0x63, 0x63, 0x75, 0x70, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x17, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6f, 0x63, 0x63, 0x75, 0x70, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x21, 0x0a, 0x0c, 0x69, 0x6e, 0x63, 0x6f, 0x6d, 0x65, 0x5f, 0x6c, 0x65,
	0x76, 0x65, 0x6c, 0x18, 0x18, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x69, 0x6e, 0x63, 0x6f, 0x6d,
	0x65, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x25, 0x0a, 0x0e, 0x6d, 0x61, 0x72, 0x69, 0x74, 0x61,
	0x6c, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x19, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d,
	0x6d, 0x61, 0x72, 0x69, 0x74, 0x61, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1f, 0x0a,
	0x0b, 0x73, 0x70, 0x6f, 0x75, 0x73, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x1a, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x73, 0x70, 0x6f, 0x75, 0x73, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x21,
	0x0a, 0x0c, 0x72, 0x69, 0x73, 0x6b, 0x5f, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x1b,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x72, 0x69, 0x73, 0x6b, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c,
	0x65, 0x12, 0x31, 0x0a, 0x14, 0x69, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x5f,
	0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x18, 0x1c, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x13, 0x69, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x4f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x69, 0x76, 0x65, 0x12, 0x24, 0x0a, 0x0e, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x6f,
	0x66, 0x5f, 0x66, 0x75, 0x6e, 0x64, 0x18, 0x1d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x4f, 0x66, 0x46, 0x75, 0x6e, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x73,
	0x73, 0x65, 0x74, 0x5f, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x61, 0x73, 0x73, 0x65, 0x74, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x12, 0x1f, 0x0a, 0x0b, 0x6b,
	0x74, 0x70, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x1f, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x6b, 0x74, 0x70, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x22, 0x0a, 0x0d,
	0x6b, 0x74, 0x70, 0x5f, 0x63, 0x69, 0x74, 0x79, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x20, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x6b, 0x74, 0x70, 0x43, 0x69, 0x74, 0x79, 0x43, 0x6f, 0x64, 0x65,
	0x12, 0x1d, 0x0a, 0x0a, 0x6b, 0x74, 0x70, 0x5f, 0x70, 0x6f, 0x73, 0x74, 0x61, 0x6c, 0x18, 0x21,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6b, 0x74, 0x70, 0x50, 0x6f, 0x73, 0x74, 0x61, 0x6c, 0x12,
	0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x72, 0x72, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18,
	0x22, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x72, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x12, 0x24, 0x0a, 0x0e, 0x63, 0x6f, 0x72, 0x72, 0x5f, 0x63, 0x69, 0x74, 0x79, 0x5f,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x23, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x6f, 0x72, 0x72,
	0x43, 0x69, 0x74, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x24, 0x0a, 0x0e, 0x63, 0x6f, 0x72, 0x72,
	0x5f, 0x63, 0x69, 0x74, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x24, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x63, 0x6f, 0x72, 0x72, 0x43, 0x69, 0x74, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1f,
	0x0a, 0x0b, 0x63, 0x6f, 0x72, 0x72, 0x5f, 0x70, 0x6f, 0x73, 0x74, 0x61, 0x6c, 0x18, 0x25, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f, 0x72, 0x72, 0x50, 0x6f, 0x73, 0x74, 0x61, 0x6c, 0x12,
	0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x72, 0x72, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x18,
	0x26, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x72, 0x72, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x72, 0x79, 0x12, 0x1f, 0x0a, 0x0b, 0x64, 0x6f, 0x6d, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x18, 0x27, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x64, 0x6f, 0x6d, 0x41, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x12, 0x22, 0x0a, 0x0d, 0x64, 0x6f, 0x6d, 0x5f, 0x63, 0x69, 0x74, 0x79, 0x5f,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x28, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x6f, 0x6d, 0x43,
	0x69, 0x74, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x22, 0x0a, 0x0d, 0x64, 0x6f, 0x6d, 0x5f, 0x63,
	0x69, 0x74, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x29, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x64, 0x6f, 0x6d, 0x43, 0x69, 0x74, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x64,
	0x6f, 0x6d, 0x5f, 0x70, 0x6f, 0x73, 0x74, 0x61, 0x6c, 0x18, 0x2a, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x64, 0x6f, 0x6d, 0x50, 0x6f, 0x73, 0x74, 0x61, 0x6c, 0x12, 0x1f, 0x0a, 0x0b, 0x64, 0x6f,
	0x6d, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x2b, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x64, 0x6f, 0x6d, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x68,
	0x6f, 0x6d, 0x65, 0x5f, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x2c, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x68, 0x6f, 0x6d, 0x65, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x6d, 0x6f,
	0x62, 0x69, 0x6c, 0x65, 0x5f, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x2d, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x1c, 0x0a,
	0x09, 0x66, 0x61, 0x63, 0x73, 0x69, 0x6d, 0x69, 0x6c, 0x65, 0x18, 0x2e, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x66, 0x61, 0x63, 0x73, 0x69, 0x6d, 0x69, 0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65,
	0x6d, 0x61, 0x69, 0x6c, 0x18, 0x2f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69,
	0x6c, 0x12, 0x25, 0x0a, 0x0e, 0x73, 0x74, 0x61, 0x74, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x30, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x73, 0x74, 0x61, 0x74, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x66, 0x61, 0x74, 0x63,
	0x61, 0x18, 0x31, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x66, 0x61, 0x74, 0x63, 0x61, 0x12, 0x10,
	0x0a, 0x03, 0x74, 0x69, 0x6e, 0x18, 0x32, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x74, 0x69, 0x6e,
	0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x69, 0x6e, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x18,
	0x33, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x74, 0x69, 0x6e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x72,
	0x79, 0x12, 0x26, 0x0a, 0x0f, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x5f, 0x63, 0x69,
	0x66, 0x5f, 0x6e, 0x6f, 0x18, 0x34, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x65, 0x78, 0x74, 0x65,
	0x72, 0x6e, 0x61, 0x6c, 0x43, 0x69, 0x66, 0x4e, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x35, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x23, 0x0a,
	0x0d, 0x69, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x36,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x69, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x2a, 0x0a, 0x12, 0x72, 0x65, 0x64, 0x5f, 0x70, 0x61, 0x79, 0x5f, 0x62, 0x61,
	0x6e, 0x6b, 0x5f, 0x62, 0x69, 0x63, 0x5f, 0x31, 0x18, 0x37, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e,
	0x72, 0x65, 0x64, 0x50, 0x61, 0x79, 0x42, 0x61, 0x6e, 0x6b, 0x42, 0x69, 0x63, 0x31, 0x12, 0x28,
	0x0a, 0x11, 0x72, 0x65, 0x64, 0x5f, 0x70, 0x61, 0x79, 0x5f, 0x62, 0x61, 0x6e, 0x6b, 0x5f, 0x62,
	0x69, 0x5f, 0x31, 0x18, 0x38, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x72, 0x65, 0x64, 0x50, 0x61,
	0x79, 0x42, 0x61, 0x6e, 0x6b, 0x42, 0x69, 0x31, 0x12, 0x2c, 0x0a, 0x13, 0x72, 0x65, 0x64, 0x5f,
	0x70, 0x61, 0x79, 0x5f, 0x62, 0x61, 0x6e, 0x6b, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x5f, 0x31, 0x18,
	0x39, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x72, 0x65, 0x64, 0x50, 0x61, 0x79, 0x42, 0x61, 0x6e,
	0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x31, 0x12, 0x32, 0x0a, 0x16, 0x72, 0x65, 0x64, 0x5f, 0x70, 0x61,
	0x79, 0x5f, 0x62, 0x61, 0x6e, 0x6b, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x5f, 0x31,
	0x18, 0x3a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x72, 0x65, 0x64, 0x50, 0x61, 0x79, 0x42, 0x61,
	0x6e, 0x6b, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x31, 0x12, 0x30, 0x0a, 0x15, 0x72, 0x65,
	0x64, 0x5f, 0x70, 0x61, 0x79, 0x5f, 0x62, 0x61, 0x6e, 0x6b, 0x5f, 0x62, 0x72, 0x61, 0x6e, 0x63,
	0x68, 0x5f, 0x31, 0x18, 0x3b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x72, 0x65, 0x64, 0x50, 0x61,
	0x79, 0x42, 0x61, 0x6e, 0x6b, 0x42, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x31, 0x12, 0x31, 0x0a, 0x16,
	0x72, 0x65, 0x64, 0x5f, 0x70, 0x61, 0x79, 0x5f, 0x62, 0x61, 0x6e, 0x6b, 0x5f, 0x61, 0x63, 0x63,
	0x5f, 0x63, 0x63, 0x79, 0x5f, 0x31, 0x18, 0x3c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x72, 0x65,
	0x64, 0x50, 0x61, 0x79, 0x42, 0x61, 0x6e, 0x6b, 0x41, 0x63, 0x63, 0x43, 0x63, 0x79, 0x31, 0x12,
	0x2d, 0x0a, 0x13, 0x52, 0x45, 0x44, 0x4d, 0x5f, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f,
	0x41, 0x43, 0x4e, 0x6f, 0x5f, 0x31, 0x18, 0x3d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x52, 0x45,
	0x44, 0x4d, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x41, 0x43, 0x4e, 0x6f, 0x31, 0x12, 0x33,
	0x0a, 0x17, 0x72, 0x65, 0x64, 0x5f, 0x70, 0x61, 0x79, 0x5f, 0x62, 0x61, 0x6e, 0x6b, 0x5f, 0x61,
	0x63, 0x63, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x5f, 0x31, 0x18, 0x3e, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x12, 0x72, 0x65, 0x64, 0x50, 0x61, 0x79, 0x42, 0x61, 0x6e, 0x6b, 0x41, 0x63, 0x63, 0x4e, 0x61,
	0x6d, 0x65, 0x31, 0x12, 0x2a, 0x0a, 0x12, 0x72, 0x65, 0x64, 0x5f, 0x70, 0x61, 0x79, 0x5f, 0x62,
	0x61, 0x6e, 0x6b, 0x5f, 0x62, 0x69, 0x63, 0x5f, 0x32, 0x18, 0x3f, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0e, 0x72, 0x65, 0x64, 0x50, 0x61, 0x79, 0x42, 0x61, 0x6e, 0x6b, 0x42, 0x69, 0x63, 0x32, 0x12,
	0x28, 0x0a, 0x11, 0x72, 0x65, 0x64, 0x5f, 0x70, 0x61, 0x79, 0x5f, 0x62, 0x61, 0x6e, 0x6b, 0x5f,
	0x62, 0x69, 0x5f, 0x32, 0x18, 0x40, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x72, 0x65, 0x64, 0x50,
	0x61, 0x79, 0x42, 0x61, 0x6e, 0x6b, 0x42, 0x69, 0x32, 0x12, 0x2c, 0x0a, 0x13, 0x72, 0x65, 0x64,
	0x5f, 0x70, 0x61, 0x79, 0x5f, 0x62, 0x61, 0x6e, 0x6b, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x5f, 0x32,
	0x18, 0x41, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x72, 0x65, 0x64, 0x50, 0x61, 0x79, 0x42, 0x61,
	0x6e, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x32, 0x12, 0x32, 0x0a, 0x16, 0x72, 0x65, 0x64, 0x5f, 0x70,
	0x61, 0x79, 0x5f, 0x62, 0x61, 0x6e, 0x6b, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x5f,
	0x32, 0x18, 0x42, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x72, 0x65, 0x64, 0x50, 0x61, 0x79, 0x42,
	0x61, 0x6e, 0x6b, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x32, 0x12, 0x30, 0x0a, 0x15, 0x72,
	0x65, 0x64, 0x5f, 0x70, 0x61, 0x79, 0x5f, 0x62, 0x61, 0x6e, 0x6b, 0x5f, 0x62, 0x72, 0x61, 0x6e,
	0x63, 0x68, 0x5f, 0x32, 0x18, 0x43, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x72, 0x65, 0x64, 0x50,
	0x61, 0x79, 0x42, 0x61, 0x6e, 0x6b, 0x42, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x32, 0x12, 0x31, 0x0a,
	0x16, 0x72, 0x65, 0x64, 0x5f, 0x70, 0x61, 0x79, 0x5f, 0x62, 0x61, 0x6e, 0x6b, 0x5f, 0x61, 0x63,
	0x63, 0x5f, 0x63, 0x63, 0x79, 0x5f, 0x32, 0x18, 0x44, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x72,
	0x65, 0x64, 0x50, 0x61, 0x79, 0x42, 0x61, 0x6e, 0x6b, 0x41, 0x63, 0x63, 0x43, 0x63, 0x79, 0x32,
	0x12, 0x2f, 0x0a, 0x15, 0x72, 0x65, 0x64, 0x5f, 0x70, 0x61, 0x79, 0x5f, 0x62, 0x61, 0x6e, 0x6b,
	0x5f, 0x61, 0x63, 0x63, 0x5f, 0x6e, 0x6f, 0x5f, 0x32, 0x18, 0x45, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x10, 0x72, 0x65, 0x64, 0x50, 0x61, 0x79, 0x42, 0x61, 0x6e, 0x6b, 0x41, 0x63, 0x63, 0x4e, 0x6f,
	0x32, 0x12, 0x33, 0x0a, 0x17, 0x72, 0x65, 0x64, 0x5f, 0x70, 0x61, 0x79, 0x5f, 0x62, 0x61, 0x6e,
	0x6b, 0x5f, 0x61, 0x63, 0x63, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x5f, 0x32, 0x18, 0x46, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x12, 0x72, 0x65, 0x64, 0x50, 0x61, 0x79, 0x42, 0x61, 0x6e, 0x6b, 0x41, 0x63,
	0x63, 0x4e, 0x61, 0x6d, 0x65, 0x32, 0x12, 0x2a, 0x0a, 0x12, 0x72, 0x65, 0x64, 0x5f, 0x70, 0x61,
	0x79, 0x5f, 0x62, 0x61, 0x6e, 0x6b, 0x5f, 0x62, 0x69, 0x63, 0x5f, 0x33, 0x18, 0x47, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0e, 0x72, 0x65, 0x64, 0x50, 0x61, 0x79, 0x42, 0x61, 0x6e, 0x6b, 0x42, 0x69,
	0x63, 0x33, 0x12, 0x28, 0x0a, 0x11, 0x72, 0x65, 0x64, 0x5f, 0x70, 0x61, 0x79, 0x5f, 0x62, 0x61,
	0x6e, 0x6b, 0x5f, 0x62, 0x69, 0x5f, 0x33, 0x18, 0x48, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x72,
	0x65, 0x64, 0x50, 0x61, 0x79, 0x42, 0x61, 0x6e, 0x6b, 0x42, 0x69, 0x33, 0x12, 0x2c, 0x0a, 0x13,
	0x72, 0x65, 0x64, 0x5f, 0x70, 0x61, 0x79, 0x5f, 0x62, 0x61, 0x6e, 0x6b, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x5f, 0x33, 0x18, 0x49, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x72, 0x65, 0x64, 0x50, 0x61,
	0x79, 0x42, 0x61, 0x6e, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x33, 0x12, 0x32, 0x0a, 0x16, 0x72, 0x65,
	0x64, 0x5f, 0x70, 0x61, 0x79, 0x5f, 0x62, 0x61, 0x6e, 0x6b, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x72, 0x79, 0x5f, 0x33, 0x18, 0x4a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x72, 0x65, 0x64, 0x50,
	0x61, 0x79, 0x42, 0x61, 0x6e, 0x6b, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x33, 0x12, 0x30,
	0x0a, 0x15, 0x72, 0x65, 0x64, 0x5f, 0x70, 0x61, 0x79, 0x5f, 0x62, 0x61, 0x6e, 0x6b, 0x5f, 0x62,
	0x72, 0x61, 0x6e, 0x63, 0x68, 0x5f, 0x33, 0x18, 0x4b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x72,
	0x65, 0x64, 0x50, 0x61, 0x79, 0x42, 0x61, 0x6e, 0x6b, 0x42, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x33,
	0x12, 0x31, 0x0a, 0x16, 0x72, 0x65, 0x64, 0x5f, 0x70, 0x61, 0x79, 0x5f, 0x62, 0x61, 0x6e, 0x6b,
	0x5f, 0x61, 0x63, 0x63, 0x5f, 0x63, 0x63, 0x79, 0x5f, 0x33, 0x18, 0x4c, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x11, 0x72, 0x65, 0x64, 0x50, 0x61, 0x79, 0x42, 0x61, 0x6e, 0x6b, 0x41, 0x63, 0x63, 0x43,
	0x63, 0x79, 0x33, 0x12, 0x2f, 0x0a, 0x15, 0x72, 0x65, 0x64, 0x5f, 0x70, 0x61, 0x79, 0x5f, 0x62,
	0x61, 0x6e, 0x6b, 0x5f, 0x61, 0x63, 0x63, 0x5f, 0x6e, 0x6f, 0x5f, 0x33, 0x18, 0x4d, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x10, 0x72, 0x65, 0x64, 0x50, 0x61, 0x79, 0x42, 0x61, 0x6e, 0x6b, 0x41, 0x63,
	0x63, 0x4e, 0x6f, 0x33, 0x12, 0x33, 0x0a, 0x17, 0x72, 0x65, 0x64, 0x5f, 0x70, 0x61, 0x79, 0x5f,
	0x62, 0x61, 0x6e, 0x6b, 0x5f, 0x61, 0x63, 0x63, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x5f, 0x33, 0x18,
	0x4e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x72, 0x65, 0x64, 0x50, 0x61, 0x79, 0x42, 0x61, 0x6e,
	0x6b, 0x41, 0x63, 0x63, 0x4e, 0x61, 0x6d, 0x65, 0x33, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x4f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x36, 0x0a, 0x18, 0x69, 0x6e,
	0x76, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x5f, 0x66, 0x75, 0x6e, 0x64, 0x5f, 0x75, 0x6e, 0x69, 0x74,
	0x5f, 0x61, 0x63, 0x5f, 0x6e, 0x6f, 0x18, 0x50, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x69, 0x6e,
	0x76, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x46, 0x75, 0x6e, 0x64, 0x55, 0x6e, 0x69, 0x74, 0x41, 0x63,
	0x4e, 0x6f, 0x12, 0x27, 0x0a, 0x0f, 0x69, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x5f, 0x6e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x51, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x69, 0x6e, 0x76,
	0x65, 0x73, 0x74, 0x6f, 0x72, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x22, 0xb2, 0x01, 0x0a, 0x1a,
	0x50, 0x65, 0x6e, 0x64, 0x61, 0x66, 0x74, 0x61, 0x72, 0x61, 0x6e, 0x50, 0x65, 0x73, 0x65, 0x72,
	0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x2f, 0x0a, 0x13, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x5f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x12, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x44, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x28, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6d, 0x69, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x74, 0x65,
	0x67, 0x72, 0x61, 0x73, 0x69, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x22, 0x18, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x73, 0x69, 0x64, 0x32, 0xa4, 0x02, 0x0a, 0x0e, 0x4d,
	0x69, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x73, 0x69, 0x12, 0x4f, 0x0a,
	0x0a, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x41, 0x6c, 0x6c, 0x12, 0x1f, 0x2e, 0x6d, 0x69,
	0x74, 0x72, 0x61, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x73, 0x69, 0x2e, 0x50, 0x61, 0x67,
	0x65, 0x53, 0x69, 0x7a, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x6d,
	0x69, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x73, 0x69, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x00, 0x12, 0x50,
	0x0a, 0x0b, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x42, 0x79, 0x49, 0x44, 0x12, 0x1d, 0x2e,
	0x6d, 0x69, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x73, 0x69, 0x2e, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x6d,
	0x69, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x73, 0x69, 0x2e, 0x53, 0x69,
	0x6e, 0x67, 0x6c, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x00,
	0x12, 0x6f, 0x0a, 0x12, 0x50, 0x65, 0x6e, 0x64, 0x61, 0x66, 0x74, 0x61, 0x72, 0x61, 0x6e, 0x50,
	0x65, 0x73, 0x65, 0x72, 0x74, 0x61, 0x12, 0x29, 0x2e, 0x6d, 0x69, 0x74, 0x72, 0x61, 0x69, 0x6e,
	0x74, 0x65, 0x67, 0x72, 0x61, 0x73, 0x69, 0x2e, 0x50, 0x65, 0x6e, 0x64, 0x61, 0x66, 0x74, 0x61,
	0x72, 0x61, 0x6e, 0x50, 0x65, 0x73, 0x65, 0x72, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x2a, 0x2e, 0x6d, 0x69, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61,
	0x73, 0x69, 0x2e, 0x50, 0x65, 0x6e, 0x64, 0x61, 0x66, 0x74, 0x61, 0x72, 0x61, 0x6e, 0x50, 0x65,
	0x73, 0x65, 0x72, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x30,
	0x01, 0x42, 0x04, 0x5a, 0x02, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_mitraintegrasi_proto_rawDescOnce sync.Once
	file_mitraintegrasi_proto_rawDescData = file_mitraintegrasi_proto_rawDesc
)

func file_mitraintegrasi_proto_rawDescGZIP() []byte {
	file_mitraintegrasi_proto_rawDescOnce.Do(func() {
		file_mitraintegrasi_proto_rawDescData = protoimpl.X.CompressGZIP(file_mitraintegrasi_proto_rawDescData)
	})
	return file_mitraintegrasi_proto_rawDescData
}

var file_mitraintegrasi_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_mitraintegrasi_proto_goTypes = []interface{}{
	(*Msg)(nil),                        // 0: mitraintegrasi.Msg
	(*HttpxError)(nil),                 // 1: mitraintegrasi.HttpxError
	(*UserResult)(nil),                 // 2: mitraintegrasi.UserResult
	(*SingleUserResult)(nil),           // 3: mitraintegrasi.SingleUserResult
	(*ListUserResult)(nil),             // 4: mitraintegrasi.ListUserResult
	(*UserIDRequest)(nil),              // 5: mitraintegrasi.UserIDRequest
	(*PageSizeRequest)(nil),            // 6: mitraintegrasi.PageSizeRequest
	(*PendaftaranPesertaRequest)(nil),  // 7: mitraintegrasi.PendaftaranPesertaRequest
	(*PendaftaranPesertaData)(nil),     // 8: mitraintegrasi.PendaftaranPesertaData
	(*PendaftaranPesertaResponse)(nil), // 9: mitraintegrasi.PendaftaranPesertaResponse
	(*Data)(nil),                       // 10: mitraintegrasi.Data
	(*timestamp.Timestamp)(nil),        // 11: google.protobuf.Timestamp
}
var file_mitraintegrasi_proto_depIdxs = []int32{
	0,  // 0: mitraintegrasi.HttpxError.msg:type_name -> mitraintegrasi.Msg
	11, // 1: mitraintegrasi.UserResult.created_at:type_name -> google.protobuf.Timestamp
	11, // 2: mitraintegrasi.UserResult.updated_at:type_name -> google.protobuf.Timestamp
	2,  // 3: mitraintegrasi.SingleUserResult.result:type_name -> mitraintegrasi.UserResult
	2,  // 4: mitraintegrasi.ListUserResult.result:type_name -> mitraintegrasi.UserResult
	8,  // 5: mitraintegrasi.PendaftaranPesertaRequest.data:type_name -> mitraintegrasi.PendaftaranPesertaData
	10, // 6: mitraintegrasi.PendaftaranPesertaResponse.data:type_name -> mitraintegrasi.Data
	6,  // 7: mitraintegrasi.Mitraintegrasi.GetUserAll:input_type -> mitraintegrasi.PageSizeRequest
	5,  // 8: mitraintegrasi.Mitraintegrasi.GetUserByID:input_type -> mitraintegrasi.UserIDRequest
	7,  // 9: mitraintegrasi.Mitraintegrasi.PendaftaranPeserta:input_type -> mitraintegrasi.PendaftaranPesertaRequest
	4,  // 10: mitraintegrasi.Mitraintegrasi.GetUserAll:output_type -> mitraintegrasi.ListUserResult
	3,  // 11: mitraintegrasi.Mitraintegrasi.GetUserByID:output_type -> mitraintegrasi.SingleUserResult
	9,  // 12: mitraintegrasi.Mitraintegrasi.PendaftaranPeserta:output_type -> mitraintegrasi.PendaftaranPesertaResponse
	10, // [10:13] is the sub-list for method output_type
	7,  // [7:10] is the sub-list for method input_type
	7,  // [7:7] is the sub-list for extension type_name
	7,  // [7:7] is the sub-list for extension extendee
	0,  // [0:7] is the sub-list for field type_name
}

func init() { file_mitraintegrasi_proto_init() }
func file_mitraintegrasi_proto_init() {
	if File_mitraintegrasi_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_mitraintegrasi_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Msg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mitraintegrasi_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HttpxError); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mitraintegrasi_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mitraintegrasi_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SingleUserResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mitraintegrasi_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListUserResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mitraintegrasi_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserIDRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mitraintegrasi_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PageSizeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mitraintegrasi_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PendaftaranPesertaRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mitraintegrasi_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PendaftaranPesertaData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mitraintegrasi_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PendaftaranPesertaResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mitraintegrasi_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Data); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_mitraintegrasi_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_mitraintegrasi_proto_goTypes,
		DependencyIndexes: file_mitraintegrasi_proto_depIdxs,
		MessageInfos:      file_mitraintegrasi_proto_msgTypes,
	}.Build()
	File_mitraintegrasi_proto = out.File
	file_mitraintegrasi_proto_rawDesc = nil
	file_mitraintegrasi_proto_goTypes = nil
	file_mitraintegrasi_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// MitraintegrasiClient is the client API for Mitraintegrasi service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MitraintegrasiClient interface {
	GetUserAll(ctx context.Context, in *PageSizeRequest, opts ...grpc.CallOption) (*ListUserResult, error)
	GetUserByID(ctx context.Context, in *UserIDRequest, opts ...grpc.CallOption) (*SingleUserResult, error)
	PendaftaranPeserta(ctx context.Context, in *PendaftaranPesertaRequest, opts ...grpc.CallOption) (Mitraintegrasi_PendaftaranPesertaClient, error)
}

type mitraintegrasiClient struct {
	cc grpc.ClientConnInterface
}

func NewMitraintegrasiClient(cc grpc.ClientConnInterface) MitraintegrasiClient {
	return &mitraintegrasiClient{cc}
}

func (c *mitraintegrasiClient) GetUserAll(ctx context.Context, in *PageSizeRequest, opts ...grpc.CallOption) (*ListUserResult, error) {
	out := new(ListUserResult)
	err := c.cc.Invoke(ctx, "/mitraintegrasi.Mitraintegrasi/GetUserAll", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mitraintegrasiClient) GetUserByID(ctx context.Context, in *UserIDRequest, opts ...grpc.CallOption) (*SingleUserResult, error) {
	out := new(SingleUserResult)
	err := c.cc.Invoke(ctx, "/mitraintegrasi.Mitraintegrasi/GetUserByID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mitraintegrasiClient) PendaftaranPeserta(ctx context.Context, in *PendaftaranPesertaRequest, opts ...grpc.CallOption) (Mitraintegrasi_PendaftaranPesertaClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Mitraintegrasi_serviceDesc.Streams[0], "/mitraintegrasi.Mitraintegrasi/PendaftaranPeserta", opts...)
	if err != nil {
		return nil, err
	}
	x := &mitraintegrasiPendaftaranPesertaClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Mitraintegrasi_PendaftaranPesertaClient interface {
	Recv() (*PendaftaranPesertaResponse, error)
	grpc.ClientStream
}

type mitraintegrasiPendaftaranPesertaClient struct {
	grpc.ClientStream
}

func (x *mitraintegrasiPendaftaranPesertaClient) Recv() (*PendaftaranPesertaResponse, error) {
	m := new(PendaftaranPesertaResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// MitraintegrasiServer is the server API for Mitraintegrasi service.
type MitraintegrasiServer interface {
	GetUserAll(context.Context, *PageSizeRequest) (*ListUserResult, error)
	GetUserByID(context.Context, *UserIDRequest) (*SingleUserResult, error)
	PendaftaranPeserta(*PendaftaranPesertaRequest, Mitraintegrasi_PendaftaranPesertaServer) error
}

// UnimplementedMitraintegrasiServer can be embedded to have forward compatible implementations.
type UnimplementedMitraintegrasiServer struct {
}

func (*UnimplementedMitraintegrasiServer) GetUserAll(context.Context, *PageSizeRequest) (*ListUserResult, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetUserAll not implemented")
}
func (*UnimplementedMitraintegrasiServer) GetUserByID(context.Context, *UserIDRequest) (*SingleUserResult, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetUserByID not implemented")
}
func (*UnimplementedMitraintegrasiServer) PendaftaranPeserta(*PendaftaranPesertaRequest, Mitraintegrasi_PendaftaranPesertaServer) error {
	return status.Errorf(codes.Unimplemented, "method PendaftaranPeserta not implemented")
}

func RegisterMitraintegrasiServer(s *grpc.Server, srv MitraintegrasiServer) {
	s.RegisterService(&_Mitraintegrasi_serviceDesc, srv)
}

func _Mitraintegrasi_GetUserAll_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PageSizeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MitraintegrasiServer).GetUserAll(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mitraintegrasi.Mitraintegrasi/GetUserAll",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MitraintegrasiServer).GetUserAll(ctx, req.(*PageSizeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Mitraintegrasi_GetUserByID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserIDRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MitraintegrasiServer).GetUserByID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mitraintegrasi.Mitraintegrasi/GetUserByID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MitraintegrasiServer).GetUserByID(ctx, req.(*UserIDRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Mitraintegrasi_PendaftaranPeserta_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(PendaftaranPesertaRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(MitraintegrasiServer).PendaftaranPeserta(m, &mitraintegrasiPendaftaranPesertaServer{stream})
}

type Mitraintegrasi_PendaftaranPesertaServer interface {
	Send(*PendaftaranPesertaResponse) error
	grpc.ServerStream
}

type mitraintegrasiPendaftaranPesertaServer struct {
	grpc.ServerStream
}

func (x *mitraintegrasiPendaftaranPesertaServer) Send(m *PendaftaranPesertaResponse) error {
	return x.ServerStream.SendMsg(m)
}

var _Mitraintegrasi_serviceDesc = grpc.ServiceDesc{
	ServiceName: "mitraintegrasi.Mitraintegrasi",
	HandlerType: (*MitraintegrasiServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetUserAll",
			Handler:    _Mitraintegrasi_GetUserAll_Handler,
		},
		{
			MethodName: "GetUserByID",
			Handler:    _Mitraintegrasi_GetUserByID_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "PendaftaranPeserta",
			Handler:       _Mitraintegrasi_PendaftaranPeserta_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "mitraintegrasi.proto",
}
