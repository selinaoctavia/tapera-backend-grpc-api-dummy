// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0-devel
// 	protoc        v3.12.3
// source: cancelsubscribebri.proto

package v1

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	_ "github.com/golang/protobuf/protoc-gen-go/descriptor"
	_ "github.com/golang/protobuf/ptypes/empty"
	_ "github.com/golang/protobuf/ptypes/timestamp"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type Msg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Msg) Reset() {
	*x = Msg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cancelsubscribebri_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Msg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Msg) ProtoMessage() {}

func (x *Msg) ProtoReflect() protoreflect.Message {
	mi := &file_cancelsubscribebri_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Msg.ProtoReflect.Descriptor instead.
func (*Msg) Descriptor() ([]byte, []int) {
	return file_cancelsubscribebri_proto_rawDescGZIP(), []int{0}
}

type HttpxError struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code  uint32 `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	ErrId string `protobuf:"bytes,2,opt,name=err_id,json=errId,proto3" json:"err_id,omitempty"`
	Msg   *Msg   `protobuf:"bytes,3,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *HttpxError) Reset() {
	*x = HttpxError{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cancelsubscribebri_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HttpxError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HttpxError) ProtoMessage() {}

func (x *HttpxError) ProtoReflect() protoreflect.Message {
	mi := &file_cancelsubscribebri_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HttpxError.ProtoReflect.Descriptor instead.
func (*HttpxError) Descriptor() ([]byte, []int) {
	return file_cancelsubscribebri_proto_rawDescGZIP(), []int{1}
}

func (x *HttpxError) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *HttpxError) GetErrId() string {
	if x != nil {
		return x.ErrId
	}
	return ""
}

func (x *HttpxError) GetMsg() *Msg {
	if x != nil {
		return x.Msg
	}
	return nil
}

type CancelSubscribeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PaymentPoolId string `protobuf:"bytes,1,opt,name=payment_pool_id,json=paymentPoolId,proto3" json:"payment_pool_id,omitempty"`
}

func (x *CancelSubscribeRequest) Reset() {
	*x = CancelSubscribeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cancelsubscribebri_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CancelSubscribeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CancelSubscribeRequest) ProtoMessage() {}

func (x *CancelSubscribeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cancelsubscribebri_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CancelSubscribeRequest.ProtoReflect.Descriptor instead.
func (*CancelSubscribeRequest) Descriptor() ([]byte, []int) {
	return file_cancelsubscribebri_proto_rawDescGZIP(), []int{2}
}

func (x *CancelSubscribeRequest) GetPaymentPoolId() string {
	if x != nil {
		return x.PaymentPoolId
	}
	return ""
}

type CancelSubscribeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status             string `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	MessageCode        string `protobuf:"bytes,2,opt,name=message_code,json=messageCode,proto3" json:"message_code,omitempty"`
	MessageDescription string `protobuf:"bytes,3,opt,name=message_description,json=messageDescription,proto3" json:"message_description,omitempty"`
	Data               *Data  `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *CancelSubscribeResponse) Reset() {
	*x = CancelSubscribeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cancelsubscribebri_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CancelSubscribeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CancelSubscribeResponse) ProtoMessage() {}

func (x *CancelSubscribeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cancelsubscribebri_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CancelSubscribeResponse.ProtoReflect.Descriptor instead.
func (*CancelSubscribeResponse) Descriptor() ([]byte, []int) {
	return file_cancelsubscribebri_proto_rawDescGZIP(), []int{3}
}

func (x *CancelSubscribeResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *CancelSubscribeResponse) GetMessageCode() string {
	if x != nil {
		return x.MessageCode
	}
	return ""
}

func (x *CancelSubscribeResponse) GetMessageDescription() string {
	if x != nil {
		return x.MessageDescription
	}
	return ""
}

func (x *CancelSubscribeResponse) GetData() *Data {
	if x != nil {
		return x.Data
	}
	return nil
}

type Data struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PaymentPoolId string `protobuf:"bytes,1,opt,name=payment_pool_id,json=paymentPoolId,proto3" json:"payment_pool_id,omitempty"`
}

func (x *Data) Reset() {
	*x = Data{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cancelsubscribebri_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Data) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Data) ProtoMessage() {}

func (x *Data) ProtoReflect() protoreflect.Message {
	mi := &file_cancelsubscribebri_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Data.ProtoReflect.Descriptor instead.
func (*Data) Descriptor() ([]byte, []int) {
	return file_cancelsubscribebri_proto_rawDescGZIP(), []int{4}
}

func (x *Data) GetPaymentPoolId() string {
	if x != nil {
		return x.PaymentPoolId
	}
	return ""
}

var File_cancelsubscribebri_proto protoreflect.FileDescriptor

var file_cancelsubscribebri_proto_rawDesc = []byte{
	0x0a, 0x18, 0x63, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62,
	0x65, 0x62, 0x72, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x12, 0x63, 0x61, 0x6e, 0x63,
	0x65, 0x6c, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x62, 0x72, 0x69, 0x1a, 0x1c,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x20, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f,
	0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x05, 0x0a, 0x03,
	0x4d, 0x73, 0x67, 0x22, 0x62, 0x0a, 0x0a, 0x48, 0x74, 0x74, 0x70, 0x78, 0x45, 0x72, 0x72, 0x6f,
	0x72, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x15, 0x0a, 0x06, 0x65, 0x72, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x49, 0x64, 0x12, 0x29, 0x0a, 0x03,
	0x6d, 0x73, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x63, 0x61, 0x6e, 0x63,
	0x65, 0x6c, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x62, 0x72, 0x69, 0x2e, 0x4d,
	0x73, 0x67, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x22, 0x40, 0x0a, 0x16, 0x43, 0x61, 0x6e, 0x63, 0x65,
	0x6c, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x26, 0x0a, 0x0f, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x70, 0x6f, 0x6f,
	0x6c, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x70, 0x61, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x50, 0x6f, 0x6f, 0x6c, 0x49, 0x64, 0x22, 0xb3, 0x01, 0x0a, 0x17, 0x43, 0x61,
	0x6e, 0x63, 0x65, 0x6c, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x21, 0x0a,
	0x0c, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x64, 0x65,
	0x12, 0x2f, 0x0a, 0x13, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x2c, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x18, 0x2e, 0x63, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62,
	0x65, 0x62, 0x72, 0x69, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22,
	0x2e, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x12, 0x26, 0x0a, 0x0f, 0x70, 0x61, 0x79, 0x6d, 0x65,
	0x6e, 0x74, 0x5f, 0x70, 0x6f, 0x6f, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0d, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x50, 0x6f, 0x6f, 0x6c, 0x49, 0x64, 0x32,
	0x82, 0x01, 0x0a, 0x12, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72,
	0x69, 0x62, 0x65, 0x42, 0x72, 0x69, 0x12, 0x6c, 0x0a, 0x0f, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c,
	0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x12, 0x2a, 0x2e, 0x63, 0x61, 0x6e, 0x63,
	0x65, 0x6c, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x62, 0x72, 0x69, 0x2e, 0x43,
	0x61, 0x6e, 0x63, 0x65, 0x6c, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x63, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x73, 0x75,
	0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x62, 0x72, 0x69, 0x2e, 0x43, 0x61, 0x6e, 0x63, 0x65,
	0x6c, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x42, 0x04, 0x5a, 0x02, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_cancelsubscribebri_proto_rawDescOnce sync.Once
	file_cancelsubscribebri_proto_rawDescData = file_cancelsubscribebri_proto_rawDesc
)

func file_cancelsubscribebri_proto_rawDescGZIP() []byte {
	file_cancelsubscribebri_proto_rawDescOnce.Do(func() {
		file_cancelsubscribebri_proto_rawDescData = protoimpl.X.CompressGZIP(file_cancelsubscribebri_proto_rawDescData)
	})
	return file_cancelsubscribebri_proto_rawDescData
}

var file_cancelsubscribebri_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_cancelsubscribebri_proto_goTypes = []interface{}{
	(*Msg)(nil),                     // 0: cancelsubscribebri.Msg
	(*HttpxError)(nil),              // 1: cancelsubscribebri.HttpxError
	(*CancelSubscribeRequest)(nil),  // 2: cancelsubscribebri.CancelSubscribeRequest
	(*CancelSubscribeResponse)(nil), // 3: cancelsubscribebri.CancelSubscribeResponse
	(*Data)(nil),                    // 4: cancelsubscribebri.Data
}
var file_cancelsubscribebri_proto_depIdxs = []int32{
	0, // 0: cancelsubscribebri.HttpxError.msg:type_name -> cancelsubscribebri.Msg
	4, // 1: cancelsubscribebri.CancelSubscribeResponse.data:type_name -> cancelsubscribebri.Data
	2, // 2: cancelsubscribebri.CancelSubscribeBri.CancelSubscribe:input_type -> cancelsubscribebri.CancelSubscribeRequest
	3, // 3: cancelsubscribebri.CancelSubscribeBri.CancelSubscribe:output_type -> cancelsubscribebri.CancelSubscribeResponse
	3, // [3:4] is the sub-list for method output_type
	2, // [2:3] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_cancelsubscribebri_proto_init() }
func file_cancelsubscribebri_proto_init() {
	if File_cancelsubscribebri_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_cancelsubscribebri_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Msg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cancelsubscribebri_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HttpxError); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cancelsubscribebri_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CancelSubscribeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cancelsubscribebri_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CancelSubscribeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cancelsubscribebri_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Data); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_cancelsubscribebri_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_cancelsubscribebri_proto_goTypes,
		DependencyIndexes: file_cancelsubscribebri_proto_depIdxs,
		MessageInfos:      file_cancelsubscribebri_proto_msgTypes,
	}.Build()
	File_cancelsubscribebri_proto = out.File
	file_cancelsubscribebri_proto_rawDesc = nil
	file_cancelsubscribebri_proto_goTypes = nil
	file_cancelsubscribebri_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// CancelSubscribeBriClient is the client API for CancelSubscribeBri service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type CancelSubscribeBriClient interface {
	CancelSubscribe(ctx context.Context, in *CancelSubscribeRequest, opts ...grpc.CallOption) (*CancelSubscribeResponse, error)
}

type cancelSubscribeBriClient struct {
	cc grpc.ClientConnInterface
}

func NewCancelSubscribeBriClient(cc grpc.ClientConnInterface) CancelSubscribeBriClient {
	return &cancelSubscribeBriClient{cc}
}

func (c *cancelSubscribeBriClient) CancelSubscribe(ctx context.Context, in *CancelSubscribeRequest, opts ...grpc.CallOption) (*CancelSubscribeResponse, error) {
	out := new(CancelSubscribeResponse)
	err := c.cc.Invoke(ctx, "/cancelsubscribebri.CancelSubscribeBri/CancelSubscribe", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CancelSubscribeBriServer is the server API for CancelSubscribeBri service.
type CancelSubscribeBriServer interface {
	CancelSubscribe(context.Context, *CancelSubscribeRequest) (*CancelSubscribeResponse, error)
}

// UnimplementedCancelSubscribeBriServer can be embedded to have forward compatible implementations.
type UnimplementedCancelSubscribeBriServer struct {
}

func (*UnimplementedCancelSubscribeBriServer) CancelSubscribe(context.Context, *CancelSubscribeRequest) (*CancelSubscribeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CancelSubscribe not implemented")
}

func RegisterCancelSubscribeBriServer(s *grpc.Server, srv CancelSubscribeBriServer) {
	s.RegisterService(&_CancelSubscribeBri_serviceDesc, srv)
}

func _CancelSubscribeBri_CancelSubscribe_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CancelSubscribeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CancelSubscribeBriServer).CancelSubscribe(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cancelsubscribebri.CancelSubscribeBri/CancelSubscribe",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CancelSubscribeBriServer).CancelSubscribe(ctx, req.(*CancelSubscribeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _CancelSubscribeBri_serviceDesc = grpc.ServiceDesc{
	ServiceName: "cancelsubscribebri.CancelSubscribeBri",
	HandlerType: (*CancelSubscribeBriServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CancelSubscribe",
			Handler:    _CancelSubscribeBri_CancelSubscribe_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "cancelsubscribebri.proto",
}
